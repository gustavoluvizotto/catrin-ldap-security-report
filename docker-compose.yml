services:
  clickhouse-server:
    image: docker.io/clickhouse/clickhouse-server
    container_name: clickhouse-server
    ports:
      - '8123:8123'
      - '9000:9000'
    environment:
      CLICKHOUSE_USER: 'default'
      CLICKHOUSE_PASSWORD: '2Hgg8Bs7xV'
    volumes:
      - ./db:/var/lib/clickhouse
    ulimits:
      nofile: 262144
    networks:
      - middle

  flask:
    build: 
      context: ./flasksite
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: postgres
    volumes:
      - ./flasksite:/flasksite:rw
      - flasksite_dynamic:/flasksite_dynamic:rw
      - ./flasksite_data:/flasksite_data:rw
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - middle
      
  nginx:
    image: docker.io/nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - flasksite_dynamic:/flasksite_dynamic:ro
      - ./flasksite_data:/flasksite_data:ro
      - ./nginx:/etc/nginx:rw
      - letsencrypt:/letsencrypt:ro
      - certbot:/certbot:ro
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - front
      - middle
    depends_on:
      - flask

  certbot:
    image: docker.io/certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - letsencrypt:/etc/letsencrypt:rw
      - certbot:/var/www/certbot:rw
    restart: unless-stopped
    networks:
      - isolated
        #depends_on:
        #- nginx

volumes:
  flasksite_dynamic:
  certbot:
  letsencrypt:

networks:
  isolated:
    driver: bridge

  front:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.40.101.0/24

  middle:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.40.111.0/24
